<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"
	xmlns:context="http://www.springframework.org/schema/context"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xsi:schemaLocation="
        http://www.springframework.org/schema/util
        http://www.springframework.org/schema/util/spring-util-3.1.xsd
        http://www.springframework.org/schema/beans 
        http://www.springframework.org/schema/beans/spring-beans-3.1.xsd
        http://www.springframework.org/schema/context 
        http://www.springframework.org/schema/context/spring-context-3.1.xsd
        http://www.springframework.org/schema/mvc
		http://www.springframework.org/schema/mvc/spring-mvc-3.1.xsd">

	
	<!-- 在使用spring validator时,有一点非常重要,BindingResult必需紧跟在@Valid的对象后面,否则会出400错! -->
<!----> 	<bean id="validator" class="org.springframework.validation.beanvalidation.LocalValidatorFactoryBean">
				<property name="providerClass" value="org.hibernate.validator.HibernateValidator" />
				<property name="validationMessageSource" ref="messageSource" />
			</bean> 
	<bean id="conversion-service" class="org.springframework.format.support.FormattingConversionServiceFactoryBean" />



	<mvc:view-controller path="/" view-name="redirect:/web/index" />
	<!--
		当在web.xml 中 DispatcherServlet使用 <url-pattern>/</url-pattern> 映射时，
		静态资源也会被拦截掉。所以不设置是没法直接访问的。
	 -->
	<mvc:default-servlet-handler />
	<!-- 静态资源映射 -->
	
	<!--<mvc:resources mapping="/bootstrap/***" location="/bootstrap/***" />-->
	
    <mvc:resources mapping="/file/order/**" location="/file/order/" />
     <mvc:resources mapping="/dwz/**" location="/dwz/" />
	<mvc:resources mapping="/app/**" location="/app/*" />
	<mvc:resources mapping="/file/**" location="/file/*" />
	<mvc:resources mapping="/ueditor/**" location="/ueditor/*" />
	<mvc:resources mapping="/reception/**" location="/reception/*" />
	<mvc:resources mapping="/pdf/**" location="/pdf/*" />
	<mvc:resources mapping="/bootstrap/**" location="/bootstrap/*" />
	<mvc:interceptors>
		<bean name="sessionInterceptor" class="com.ruanyun.common.interceptor.CommonInterceptor">
			<!--  开启权限验证 -->
			<property name="validationAuthority" value="true"></property>
			<!--  开启修改试图信息 -->
			<property name="modifyView" value="true"></property>
			<!--  权限验证的白名单 -->
			<property name="whiteList">
				<value>
					/
				   /dwz/**
				   /login
					/logout
				   /home
				   /app/**
				   /file/**
				   /appinfo/appDownLoad
				   /ueditor/**
				   /bootstrap/**
				   /weixin/**
				   /wxmall/**
				   /js/**
				    /css/**
				    /img/**
				     /sadmin
					/web/**
					/css/mobile/**
					/js/mobile/**
					/img/mobile/**
					/mobile/**
					/img/mobile/**
					/static/**
					/transaction/**
					/layer/**
				</value>
			</property>
			<!--  权限验证的黑名单 -->
			<property name="blackList">
				<value>
				</value>
			</property>
			<!--  权限验证 无权限时跳转路径 -->
			<property name="noSession" value="/login" />
		</bean>
	</mvc:interceptors>
	<mvc:interceptors>
		<bean name="webSessionInterceptor" class="com.ruanyun.common.interceptor.WebInterceptor">
			<!--  开启权限验证 -->
			<property name="validationAuthority" value="true"></property>
			<!--  开启修改试图信息 -->
			<property name="modifyView" value="true"></property>
			<!--  权限验证的白名单 -->
			<property name="whiteList">
				<value>
					/web/stock/login
					/web/stock/center
					/web/stock/list/json
					/web/stock/register
					/web/stock/password/forget
					/mobile/**
					/web/stock/update/authentication
				</value>
			</property>
			<!--  权限验证的黑名单 -->
			<property name="blackList">
				<value>
					/web/stock/**
				</value>
			</property>
			<!--  权限验证 无权限时跳转路径 -->
			<property name="noSession" value="mobile/stock/login" />
		</bean>
	</mvc:interceptors>

	<mvc:interceptors>
		<bean name="mobileSessionInterceptor" class="com.ruanyun.common.interceptor.MobileInterceptor">
			<!--  开启权限验证 -->
			<property name="validationAuthority" value="true"></property>
			<!--  开启修改试图信息 -->
			<property name="modifyView" value="true"></property>
			<!--  权限验证的白名单 -->
			<property name="whiteList">
				<value>
					/mobile/stock/login
					/mobile/stock/center
					/mobile/stock/list/json
					/mobile/stock/register
					/mobile/stock/password/forget
					/mobile/network/service/protocol
					/mobile/investment/agreement
					/mobile/stock/update/authentication
					/mobile/register/success
					/mobile/notifyUrl
					/mobile/toPayResult
				</value>
			</property>
			<!--  权限验证的黑名单 -->
			<property name="blackList">
				<value>
					/mobile/**
				</value>
			</property>
			<!--  权限验证 无权限时跳转路径 -->
			<property name="noSession" value="/mobile/stock/login" />
		</bean>
	</mvc:interceptors>
	<!-- ========================= VIEW定义 ========================= -->

	<!-- 扫描controller类 -->
	<context:component-scan base-package="com.ruanyun.web.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	<!-- 扫描controller类 -->
	<context:component-scan base-package="com.pay.yspay.controller">
		<context:include-filter type="annotation" expression="org.springframework.stereotype.Controller" />
	</context:component-scan>
	
	<!-- 根据客户端的不同的请求决定不同的 view进行响应, 如 /blog/1.json /blog/1.xml -->
	<bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
		<!-- 设置为true以忽略对Accept Header的支持
		扩展名至mimeType的映射,即 /user.json => application/json -->
		<property name="favorPathExtension" value="false" />

		<!-- 用于开启 /userinfo/123?format=json 的支持 -->
		<property name="favorParameter" value="false" />

		<!-- favorPathExtension, favorParameter是true时才起作用 -->
		<property name="mediaTypes">
			<map>
				<entry key="wml" value="text/vnd.wap.wml"/>
				<entry key="vnd" value="application/vnd.wap.xhtml+xml"/>
				<entry key="xhtml" value="application/xhtml+xml"/>
				<entry key="html" value="*" />
			</map>
		</property>
		
		<property name="viewResolvers">
			<list>
				<!-- bean name view resolver -->
				<bean class="org.springframework.web.servlet.view.BeanNameViewResolver" p:order="0" />
				<!-- freemarker view -->
			    <bean class="org.springframework.web.servlet.view.freemarker.FreeMarkerViewResolver" p:order="1" >
			        <property name="cache" value="true" />
			        <property name="prefix" value="" />
			        <property name="suffix" value=".ftl" />
			        <property name="contentType" value="text/html;charset=UTF-8"></property>
			    </bean>
				<!-- jsp view -->
				<bean class="org.springframework.web.servlet.view.InternalResourceViewResolver" p:order="2" >
					<property name="viewClass" value="org.springframework.web.servlet.view.JstlView" />
					<property name="contentType" value="text/html" />
					<property name="prefix" value="/WEB-INF/jsp/" />
					<property name="suffix" value=".jsp" />
				</bean>
			</list>
		</property>
	</bean>


	<!-- freemarker配置 -->
	<bean id="freemarkerConfig"
        class="org.springframework.web.servlet.view.freemarker.FreeMarkerConfigurer">
        <property name="templateLoaderPath" value="/WEB-INF/ftl/" />
        <property name="freemarkerSettings">
            <props>
                <prop key="template_update_delay">0</prop>
                <prop key="default_encoding">UTF-8</prop>
                <prop key="number_format">0.##########</prop>
                <prop key="datetime_format">yyyy-MM-dd HH:mm:ss</prop>
                <prop key="classic_compatible">true</prop>
                <prop key="template_exception_handler">ignore</prop>
            </props>
        </property>
    </bean>
    
    

	<!-- json view -->
	<!-- <bean id="defaultJsonView" class="org.springframework.web.servlet.view.json.MappingJacksonJsonView" /> -->

	<!-- 文件上传相关 -->
	<bean id="multipartResolver" class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<!-- one of the properties available;the maximum file size in bytes -->
		<property name="maxUploadSize" value="20000000000" />
	</bean>

	<!-- 控制器异常处理 -->
	<!-- <bean id="exceptionResolver" class="org.springframework.web.servlet.handler.SimpleMappingExceptionResolver">
		<property name="exceptionMappings">
			<props>
				<prop key="java.lang.Exception">error_all</prop>
			</props>
		</property>
	</bean> -->
	<!-- <mvc:annotation-driven /> -->
	<mvc:annotation-driven validator="validator" conversion-service="conversion-service" >
	 <mvc:argument-resolvers>  
           <bean class="com.ruanyun.common.annotation.method.FormModelMethodArgumentResolver"/>
           <bean class="com.ruanyun.common.annotation.method.FormListMethodArgumentResolver"/>  
     </mvc:argument-resolvers>  
	</mvc:annotation-driven>
</beans>